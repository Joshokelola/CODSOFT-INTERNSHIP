// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'features/todo/domain/todo.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 7887432020074312942),
      name: 'TodoTask',
      lastPropertyId: const obx_int.IdUid(6, 8493302895164903265),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4174744362849402853),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3764078838851052314),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5177302926580977837),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 517521087434772107),
            name: 'dueDate',
            type: 12,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8414640223735911237),
            name: 'priority',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8493302895164903265),
            name: 'isCompleted',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 7887432020074312942),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    TodoTask: obx_int.EntityDefinition<TodoTask>(
        model: _entities[0],
        toOneRelations: (TodoTask object) => [],
        toManyRelations: (TodoTask object) => {},
        getId: (TodoTask object) => object.id,
        setId: (TodoTask object, int id) {
          object.id = id;
        },
        objectToFB: (TodoTask object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final descriptionOffset = object.description == null
              ? null
              : fbb.writeString(object.description!);
          fbb.startTable(7);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, descriptionOffset);
          fbb.addInt64(
              3,
              object.dueDate == null
                  ? null
                  : object.dueDate!.microsecondsSinceEpoch * 1000);
          fbb.addInt64(4, object.priority);
          fbb.addBool(5, object.isCompleted);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dueDateValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8);
          final dueDateParam = dueDateValue == null
              ? null
              : DateTime.fromMicrosecondsSinceEpoch(
                  (dueDateValue / 1000).round());
          final priorityParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final isCompletedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final object = TodoTask(
              id: idParam,
              title: titleParam,
              description: descriptionParam,
              dueDate: dueDateParam,
              priority: priorityParam,
              isCompleted: isCompletedParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [TodoTask] entity fields to define ObjectBox queries.
class TodoTask_ {
  /// See [TodoTask.id].
  static final id =
      obx.QueryIntegerProperty<TodoTask>(_entities[0].properties[0]);

  /// See [TodoTask.title].
  static final title =
      obx.QueryStringProperty<TodoTask>(_entities[0].properties[1]);

  /// See [TodoTask.description].
  static final description =
      obx.QueryStringProperty<TodoTask>(_entities[0].properties[2]);

  /// See [TodoTask.dueDate].
  static final dueDate =
      obx.QueryDateNanoProperty<TodoTask>(_entities[0].properties[3]);

  /// See [TodoTask.priority].
  static final priority =
      obx.QueryIntegerProperty<TodoTask>(_entities[0].properties[4]);

  /// See [TodoTask.isCompleted].
  static final isCompleted =
      obx.QueryBooleanProperty<TodoTask>(_entities[0].properties[5]);
}
